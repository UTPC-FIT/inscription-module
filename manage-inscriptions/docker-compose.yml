services:
  node-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "7010:3000"
    volumes:
      - ./:/usr/src/app
      - ./upload:/usr/src/app/src/upload
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGO_URL=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}?authSource=admin
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend

  mongo:
    image: mongo:4.4
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: |
        mongo --username ${MONGO_USER} \
              --password ${MONGO_PASSWORD} \
              --eval "db.adminCommand('ping')" > /dev/null 2>&1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "7013:27017"
    networks:
      - backend
  mongo-express:
    image: mongo-express:1.0
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "7014:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_HOST}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend

volumes:
  mongo-data:
    driver: local

networks:
  backend:
    name: inscription-uptc-fit-network
    external: true
