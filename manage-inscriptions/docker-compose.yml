services:
  uptc-fit-inscription-node-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "3002:3000"
    volumes:
      - ./:/usr/src/app
      - ./upload:/usr/src/app/upload
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${MONGO_INITDB_DATABASE}?authSource=admin
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend

  # MongoDB
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-secret}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-uptc_fit}
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d # scripts de inicializaciÃ³n opcionales
    healthcheck:
      test: |
        mongosh --username ${MONGO_INITDB_ROOT_USERNAME} \
                --password ${MONGO_INITDB_ROOT_PASSWORD} \
                --eval "db.adminCommand('ping')" > /dev/null 2>&1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "27017:27017"
    networks:
      - backend

  mongo-express:
    image: mongo-express:1.0
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend

volumes:
  mongo-data:


networks:
  backend:
    driver: bridge
